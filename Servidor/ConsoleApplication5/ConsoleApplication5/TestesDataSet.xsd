<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TestesDataSet" targetNamespace="http://tempuri.org/TestesDataSet.xsd" xmlns:mstns="http://tempuri.org/TestesDataSet.xsd" xmlns="http://tempuri.org/TestesDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TestesConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TestesConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ConsoleApplication5.Properties.Settings.GlobalReference.Default.TestesConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="testeTableAdapter" GeneratorDataComponentClassName="testeTableAdapter" Name="teste" UserDataComponentName="testeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TestesConnectionString (Settings)" DbObjectName="Testes.dbo.teste" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[teste] WHERE (([id] = @Original_id) AND ((@IsNull_teste1 = 1 AND [teste1] IS NULL) OR ([teste1] = @Original_teste1)) AND ((@IsNull_teste2 = 1 AND [teste2] IS NULL) OR ([teste2] = @Original_teste2)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_teste1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="teste1" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_teste1" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teste1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_teste2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="teste2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_teste2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teste2" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[teste] ([id], [teste1], [teste2]) VALUES (@id, @teste1, @teste2);
SELECT id, teste1, teste2 FROM teste WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@teste1" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teste1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@teste2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teste2" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, teste1, teste2 FROM dbo.teste</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[teste] SET [id] = @id, [teste1] = @teste1, [teste2] = @teste2 WHERE (([id] = @Original_id) AND ((@IsNull_teste1 = 1 AND [teste1] IS NULL) OR ([teste1] = @Original_teste1)) AND ((@IsNull_teste2 = 1 AND [teste2] IS NULL) OR ([teste2] = @Original_teste2)));
SELECT id, teste1, teste2 FROM teste WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@teste1" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teste1" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@teste2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teste2" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_teste1" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="teste1" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_teste1" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teste1" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_teste2" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="teste2" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_teste2" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="teste2" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="teste1" DataSetColumn="teste1" />
              <Mapping SourceColumn="teste2" DataSetColumn="teste2" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TestesDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="TestesDataSet" msprop:Generator_UserDSName="TestesDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="teste" msprop:Generator_TableClassName="testeDataTable" msprop:Generator_TableVarName="tableteste" msprop:Generator_TablePropName="teste" msprop:Generator_RowDeletingName="testeRowDeleting" msprop:Generator_RowChangingName="testeRowChanging" msprop:Generator_RowEvHandlerName="testeRowChangeEventHandler" msprop:Generator_RowDeletedName="testeRowDeleted" msprop:Generator_UserTableName="teste" msprop:Generator_RowChangedName="testeRowChanged" msprop:Generator_RowEvArgName="testeRowChangeEvent" msprop:Generator_RowClassName="testeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_UserColumnName="id">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="teste1" msprop:Generator_ColumnVarNameInTable="columnteste1" msprop:Generator_ColumnPropNameInRow="teste1" msprop:Generator_ColumnPropNameInTable="teste1Column" msprop:Generator_UserColumnName="teste1" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="teste2" msprop:Generator_ColumnVarNameInTable="columnteste2" msprop:Generator_ColumnPropNameInRow="teste2" msprop:Generator_ColumnPropNameInTable="teste2Column" msprop:Generator_UserColumnName="teste2" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:teste" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
</xs:schema>